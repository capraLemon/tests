{
	"info": {
		"_postman_id": "90d77036-d336-49c1-bb48-5b0b4b8203ab",
		"name": "mytests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "0.my_functions",
			"item": [
				{
					"name": "my_functions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "419f35fe-b341-4dbe-a1ff-6f1c4b2fda51",
								"exec": [
									"postman.setGlobalVariable(\"numberOfItemsWhichDoesntHaveBothStrings\", (stringOne, stringTwo, searchResult) => {",
									"    let stopFlag = true;",
									"\tlet testPassed = true;",
									"\tlet index = 0;",
									"",
									"\tlet badItemNumbers = [];",
									"",
									"\twhile (stopFlag) {",
									"\t    let stringOneIsFound = false;",
									"\t\tlet stringTwoIsFound = false;",
									"\t\tlet item = searchResult.items[index];",
									"\t\tlet notPassed = true;",
									"\t\tlet itemText = JSON.stringify(item).toLowerCase();",
									"\t\t",
									"\t\tif (itemText.includes(stringOne)) {",
									"\t\t\tstringOneIsFound = true;",
									"\t\t}",
									"\t\tif (itemText.includes(stringTwo)) {",
									"\t\t\tstringTwoIsFound = true;",
									"\t\t}",
									"\t\tif (stringTwoIsFound && stringOneIsFound) {",
									"\t\t\tnotPassed = false;",
									"\t\t} else {",
									"\t\t\tnotPassed = true;",
									"\t\t}",
									"\t\t",
									"\t\tif (notPassed) {",
									"\t\t\tbadItemNumbers.push(index);",
									"\t\t}",
									"\t\tindex += 1;",
									"\t\tif (searchResult.items.length === index) {",
									"\t\t\tstopFlag = false;",
									"\t\t}",
									"\t}",
									"\treturn badItemNumbers;",
									"});",
									"",
									"",
									"postman.setGlobalVariable(\"numberOfItemsWhichDoesntHaveOneStringAfterAnother\", (stringOne, stringTwo, searchResult) => {",
									"    let stopFlag = true;",
									"\tlet testPassed = true;",
									"\tlet index = 0;",
									"",
									"\tlet badItemNumbers = [];",
									"",
									"\twhile (stopFlag) {",
									"\t\tlet item = searchResult.items[index];",
									"\t\tlet notPassed = true;",
									"\t\tlet itemText = JSON.stringify(item).toLowerCase().split(' ');",
									"\t\t",
									"\t\tfor (let i = 0; i < itemText.length - 1; i++) {",
									"\t\t\tif (itemText[i].includes(stringOne) && itemText[i+1].includes(stringTwo)) {",
									"\t\t\t\tnotPassed = false;",
									"\t\t\t}",
									"\t\t}",
									"\t\tif (notPassed) {",
									"\t\t\tbadItemNumbers.push(index);",
									"\t\t}",
									"\t\tindex += 1;",
									"\t\tif (searchResult.items.length === index) {",
									"\t\t\tstopFlag = false;",
									"\t\t}",
									"\t}",
									"\treturn badItemNumbers;",
									"});",
									"",
									"",
									"postman.setGlobalVariable(\"checkNoMatch\", (firstBadItems, secondBadItems) => {",
									"    let noMatch = true;",
									"\tfirstBadItems.forEach(item => {",
									"\t\tif (secondBadItems.includes(item)) {",
									"\t\t\tnoMatch = false;",
									"\t\t}",
									"\t});",
									"\treturn noMatch;",
									"});",
									"",
									"",
									"postman.setGlobalVariable(\"stringInProperty\", (string, propertyPath, searchResult) => {",
									"    let stopFlag = true;",
									"\tlet index = 0;",
									"\tlet badItemNumbers = [];",
									"",
									"\twhile (stopFlag) {",
									"\t\tlet item = searchResult.items[index];",
									"",
									"\t\tproperty = item;",
									"\t\tif (propertyPath.length) {",
									"\t\t\tpropertyPath.forEach(field => {",
									"\t\t\t\tproperty = property[field];",
									"\t\t\t});",
									"\t\t} else {",
									"\t\t\tproperty = JSON.stringify(item);",
									"\t\t}",
									"\t\t// if (!property.includes(string)) {",
									"\t\tif (!property.toLowerCase().includes(string)) {",
									"\t\t\tbadItemNumbers.push(index);",
									"\t\t}",
									"\t\tindex += 1;",
									"\t\tif (searchResult.items.length === index) {",
									"\t\t\tstopFlag = false;",
									"\t\t}",
									"\t}",
									"\treturn badItemNumbers;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "api.hh.ru/vacancies",
							"host": [
								"api",
								"hh",
								"ru"
							],
							"path": [
								"vacancies"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "1.smoke_and_functional",
			"item": [
				{
					"name": "smoke_test",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c0c63c5-4f4f-4390-a191-1027bfa4dcb2",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"JSON is valid\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response time is less than 400ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(400);",
									"});",
									"",
									"pm.test(\"there is string 'java' in every item\", function () {",
									"    let numberOfItemsWithoutString = eval(globals.numberOfItemsWhichDoesntHaveBothStrings)('java', '', pm.response.json());",
									"    pm.expect(numberOfItemsWithoutString.length).to.be.equal(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "api.hh.ru/vacancies?text=java",
							"host": [
								"api",
								"hh",
								"ru"
							],
							"path": [
								"vacancies"
							],
							"query": [
								{
									"key": "text",
									"value": "java"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "no_match_result",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "419f35fe-b341-4dbe-a1ff-6f1c4b2fda51",
								"exec": [
									"pm.test(\"JSON is valid\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"No results found with javasvasvasasv request\", function() {",
									"   let responseBody = pm.response.json();",
									"   pm.expect(responseBody.found).to.be.equal(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "api.hh.ru/vacancies?text=javasvasvasasv",
							"host": [
								"api",
								"hh",
								"ru"
							],
							"path": [
								"vacancies"
							],
							"query": [
								{
									"key": "text",
									"value": "javasvasvasasv"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "number_of_results_on_page",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "90486345-7f31-4cad-9648-802e6f9a1e20",
								"exec": [
									"pm.test(\"Number of results on page equals per_page field\", function() {",
									"   let responseBody = pm.response.json();",
									"   pm.expect(responseBody.items.length).to.be.equal(responseBody.per_page);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "api.hh.ru/vacancies?text=java",
							"host": [
								"api",
								"hh",
								"ru"
							],
							"path": [
								"vacancies"
							],
							"query": [
								{
									"key": "text",
									"value": "java"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "number_of_found_resuls_equals_to_found_field",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "33ecd51d-1926-4a83-9f04-45f8cd2eb70f",
								"exec": [
									"pm.test(\"Number of results equals 'found' field\", function() {",
									"   let responseBody = pm.response.json();",
									"   pm.expect(responseBody.items.length).to.be.equal(responseBody.found);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "api.hh.ru/vacancies?text=lsa",
							"host": [
								"api",
								"hh",
								"ru"
							],
							"path": [
								"vacancies"
							],
							"query": [
								{
									"key": "text",
									"value": "lsa"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "number_of_results_on_page",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c5026041-c229-4f54-9896-e44465e820af",
								"exec": [
									"pm.test(\"Number of results on page lesser or equals 20\", function() {",
									"   let responseBody = pm.response.json();",
									"   pm.expect(responseBody.items.length).to.be.below(21);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "api.hh.ru/vacancies?text=js",
							"host": [
								"api",
								"hh",
								"ru"
							],
							"path": [
								"vacancies"
							],
							"query": [
								{
									"key": "text",
									"value": "js"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "X1_ja_request_doesnt_give_java_but_give_jahre",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c5026041-c229-4f54-9896-e44465e820af",
								"exec": [
									"pm.test(\"Response body includes 'Jahre'\", function() {",
									"   let responseBody = pm.response.text();",
									"   pm.expect(responseBody).to.include('Jahre');",
									"});",
									"",
									"pm.test(\"Response body does include 'java'\", function() {",
									"   let responseBody = pm.response.text();",
									"   pm.expect(responseBody).to.include('java');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "api.hh.ru/vacancies?text=ja",
							"host": [
								"api",
								"hh",
								"ru"
							],
							"path": [
								"vacancies"
							],
							"query": [
								{
									"key": "text",
									"value": "ja"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "no_match_result_long_request_text",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "419f35fe-b341-4dbe-a1ff-6f1c4b2fda51",
								"exec": [
									"pm.test(\"No results found with long request\", function() {",
									"   let responseBody = pm.response.json();",
									"   pm.expect(responseBody.found).to.be.equal(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "api.hh.ru/vacancies?text=()javasvasvasasvavasvajavasvasvasasvavasvajavasvasvasasvavasvajavasvasvasasvavasvajavasvasvasasvavasvajavasvasvasasvavasvajavasvasvasasvavasvajavasvasvasasvavasvajavasvasvasasvavasvajavasvasvasasvavasvajavasvasvasasvavasvajavasvasvasasvavasva1234567890!@$%^*()",
							"host": [
								"api",
								"hh",
								"ru"
							],
							"path": [
								"vacancies"
							],
							"query": [
								{
									"key": "text",
									"value": "()javasvasvasasvavasvajavasvasvasasvavasvajavasvasvasasvavasvajavasvasvasasvavasvajavasvasvasasvavasvajavasvasvasasvavasvajavasvasvasasvavasvajavasvasvasasvavasvajavasvasvasasvavasvajavasvasvasasvavasvajavasvasvasasvavasvajavasvasvasasvavasva1234567890!@$%^*()"
								},
								{
									"key": null,
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "result_for_no_text",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "419f35fe-b341-4dbe-a1ff-6f1c4b2fda51",
								"exec": [
									"pm.test(\"no request text gives some results\", function() {",
									"   let responseBody = pm.response.json();",
									"   pm.expect(responseBody.found).to.be.above(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "api.hh.ru/vacancies",
							"host": [
								"api",
								"hh",
								"ru"
							],
							"path": [
								"vacancies"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "2.yazik_zaprosov",
			"item": [
				{
					"name": "1.bazovie_vozmozhnosti",
					"item": [
						{
							"name": "functional_test_\"yazik_zaprosov\" менеджер лизингу",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7c0c63c5-4f4f-4390-a191-1027bfa4dcb2",
										"exec": [
											"pm.test(\"url is correct and equals 'менеджер лизингу'\", function () {",
											"    let start = pm.request.url.toString().indexOf('text=');",
											"    pm.expect(pm.request.url.toString().slice(start+5)).to.be.equal(\"%D0%BC%D0%B5%D0%BD%D0%B5%D0%B4%D0%B6%D0%B5%D1%80%20%D0%BB%D0%B8%D0%B7%D0%B8%D0%BD%D0%B3%D1%83\");",
											"});",
											"",
											"pm.test(\"There are both strings 'менедж' and 'лизинг' in each item\", function () {",
											"    let itemsWithoutSearchStrings = eval(globals.numberOfItemsWhichDoesntHaveBothStrings)('менедж', 'лизинг', pm.response.json());",
											"    pm.expect(itemsWithoutSearchStrings.length).to.be.equal(0);",
											"});",
											"",
											"pm.test(\"Response has 'менеджер по лизингу'\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"менеджер по лизингу\");",
											"});",
											"",
											"pm.globals.set(\"numbeForUchetSlovoform\", pm.response.json().found);",
											"",
											"",
											"",
											"",
											"",
											"pm.test(\"All items have both words\", function () {",
											"    let array = eval(globals.numberOfItemsWhichDoesntHaveBothStrings)('менедж', 'лизинг', pm.response.json());",
											"    pm.expect(array.length).to.be.equal(0);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "api.hh.ru/vacancies?text=%D0%BC%D0%B5%D0%BD%D0%B5%D0%B4%D0%B6%D0%B5%D1%80%20%D0%BB%D0%B8%D0%B7%D0%B8%D0%BD%D0%B3%D1%83\n\n\n\n",
									"host": [
										"api",
										"hh",
										"ru"
									],
									"path": [
										"vacancies"
									],
									"query": [
										{
											"key": "text",
											"value": "%D0%BC%D0%B5%D0%BD%D0%B5%D0%B4%D0%B6%D0%B5%D1%80%20%D0%BB%D0%B8%D0%B7%D0%B8%D0%BD%D0%B3%D1%83\n\n\n\n"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "2.poisk_slovosochetaniy",
					"item": [
						{
							"name": "X2_\"менеджер_лизингу\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7c0c63c5-4f4f-4390-a191-1027bfa4dcb2",
										"exec": [
											"pm.test(\"url is correct and equals 'менеджер лизингу'\", function () {",
											"    let start = pm.request.url.toString().indexOf('text=');",
											"    pm.expect(pm.request.url.toString().slice(start+5)).to.be.equal('\"%D0%BC%D0%B5%D0%BD%D0%B5%D0%B4%D0%B6%D0%B5%D1%80%20%D0%BB%D0%B8%D0%B7%D0%B8%D0%BD%D0%B3%D1%83\"');",
											"});",
											"",
											"pm.test(\"Response has 'менеджер лизингу'\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"менеджер лизингу\");",
											"});",
											"",
											"pm.test(\"But there is 1 found item\", function () {",
											"    pm.expect(pm.response.json().found).to.be.equal(1);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "api.hh.ru/vacancies?text=\"%D0%BC%D0%B5%D0%BD%D0%B5%D0%B4%D0%B6%D0%B5%D1%80%20%D0%BB%D0%B8%D0%B7%D0%B8%D0%BD%D0%B3%D1%83\"\n\n\n\n",
									"host": [
										"api",
										"hh",
										"ru"
									],
									"path": [
										"vacancies"
									],
									"query": [
										{
											"key": "text",
											"value": "\"%D0%BC%D0%B5%D0%BD%D0%B5%D0%B4%D0%B6%D0%B5%D1%80%20%D0%BB%D0%B8%D0%B7%D0%B8%D0%BD%D0%B3%D1%83\"\n\n\n\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "менеджер по",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7c0c63c5-4f4f-4390-a191-1027bfa4dcb2",
										"exec": [
											"pm.test(\"url is correct and equals 'менеджер по'\", function () {",
											"    let start = pm.request.url.toString().indexOf('text=');",
											"    pm.expect(pm.request.url.toString().slice(start+5)).to.be.equal('\"%D0%BC%D0%B5%D0%BD%D0%B5%D0%B4%D0%B6%D0%B5%D1%80%20%D0%BF%D0%BE\"');",
											"});",
											"",
											"pm.test(\"All items have both words 'менедж' and 'по' one after another\", function () {",
											"    let array = eval(globals.numberOfItemsWhichDoesntHaveOneStringAfterAnother)('менедж', 'по', pm.response.json());",
											"    pm.expect(array.length).to.be.equal(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "api.hh.ru/vacancies?text=\"%D0%BC%D0%B5%D0%BD%D0%B5%D0%B4%D0%B6%D0%B5%D1%80%20%D0%BF%D0%BE\"\n\n\n\n",
									"host": [
										"api",
										"hh",
										"ru"
									],
									"path": [
										"vacancies"
									],
									"query": [
										{
											"key": "text",
											"value": "\"%D0%BC%D0%B5%D0%BD%D0%B5%D0%B4%D0%B6%D0%B5%D1%80%20%D0%BF%D0%BE\"\n\n\n\n"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "3.uchet_slovoform",
					"item": [
						{
							"name": "1.padezhi",
							"item": [
								{
									"name": "functional_test_\"yazik_zaprosov\" менеджеров лизинг",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c0c63c5-4f4f-4390-a191-1027bfa4dcb2",
												"exec": [
													"pm.test(\"url is correct and equals 'менеджеров лизинг'\", function () {",
													"    let start = pm.request.url.toString().indexOf('text=');",
													"    pm.expect(pm.request.url.toString().slice(start+5)).to.be.equal(\"%D0%BC%D0%B5%D0%BD%D0%B5%D0%B4%D0%B6%D0%B5%D1%80%D0%BE%D0%B2%20%D0%BB%D0%B8%D0%B7%D0%B8%D0%BD%D0%B3\");",
													"});",
													"",
													"pm.test(\"Response has 'менеджер'\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"менеджер\");",
													"});",
													"",
													"pm.test(\"Response has 'лизингу'\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"лизингу\");",
													"});",
													"",
													"pm.test(\"different padezhi gives the same number of found vacancies as in request 'менеджер лизингу'\", function () {",
													"    pm.expect(pm.response.json().found).to.be.equal(pm.globals.get(\"numbeForUchetSlovoform\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "api.hh.ru/vacancies?text=%D0%BC%D0%B5%D0%BD%D0%B5%D0%B4%D0%B6%D0%B5%D1%80%D0%BE%D0%B2%20%D0%BB%D0%B8%D0%B7%D0%B8%D0%BD%D0%B3\n\n\n\n",
											"host": [
												"api",
												"hh",
												"ru"
											],
											"path": [
												"vacancies"
											],
											"query": [
												{
													"key": "text",
													"value": "%D0%BC%D0%B5%D0%BD%D0%B5%D0%B4%D0%B6%D0%B5%D1%80%D0%BE%D0%B2%20%D0%BB%D0%B8%D0%B7%D0%B8%D0%BD%D0%B3\n\n\n\n"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "2.exact_word_form",
							"item": [
								{
									"name": "X3_there_should_be_no_\"менеджера\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c0c63c5-4f4f-4390-a191-1027bfa4dcb2",
												"exec": [
													"pm.test(\"url is correct and equals 'менеджер'\", function () {",
													"    let start = pm.request.url.toString().indexOf('text=');",
													"    pm.expect(pm.request.url.toString().slice(start+5)).to.be.equal(\"!%D0%BC%D0%B5%D0%BD%D0%B5%D0%B4%D0%B6%D0%B5%D1%80\");",
													"});",
													"",
													"pm.test(\"Response has 'менеджер'\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"менеджер\");",
													"});",
													"",
													"pm.test(\"Response doesn't have singlular forms of 'менеджер' except 'менеджера'\", function () {",
													"    pm.expect(pm.response.text()).not.to.include(\"менеджеру\");",
													"    pm.expect(pm.response.text()).not.to.include(\"менеджером\");",
													"    pm.expect(pm.response.text()).not.to.include(\"менеджере\");",
													"});",
													"",
													"pm.test(\"Response doesn't have plural forms of 'менеджер'\", function () {",
													"    pm.expect(pm.response.text()).not.to.include(\"менеджеры\");",
													"    pm.expect(pm.response.text()).not.to.include(\"менеджеров\");",
													"    pm.expect(pm.response.text()).not.to.include(\"менеджерам\");",
													"    pm.expect(pm.response.text()).not.to.include(\"менеджерами\");",
													"    pm.expect(pm.response.text()).not.to.include(\"менеджерах\");",
													"});",
													"",
													"pm.test(\"Response doesn't have 'менеджера'\", function () {",
													"    pm.expect(pm.response.text()).not.to.include(\"менеджера\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "api.hh.ru/vacancies?text=!%D0%BC%D0%B5%D0%BD%D0%B5%D0%B4%D0%B6%D0%B5%D1%80\n\n\n\n",
											"host": [
												"api",
												"hh",
												"ru"
											],
											"path": [
												"vacancies"
											],
											"query": [
												{
													"key": "text",
													"value": "!%D0%BC%D0%B5%D0%BD%D0%B5%D0%B4%D0%B6%D0%B5%D1%80\n\n\n\n"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "3.search_part_of_word",
							"item": [
								{
									"name": "search_with_part_of_word",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c0c63c5-4f4f-4390-a191-1027bfa4dcb2",
												"exec": [
													"pm.test(\"url is correct and equals 'лог*'\", function () {",
													"    let start = pm.request.url.toString().indexOf('text=');",
													"    pm.expect(pm.request.url.toString().slice(start+5)).to.be.equal(\"%D0%BB%D0%BE%D0%B3*\");",
													"});",
													"",
													"pm.test(\"Response has 'логопед'\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"логопед\");",
													"});",
													"",
													"pm.test(\"Response has 'логист'\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"логист\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "api.hh.ru/vacancies?text=%D0%BB%D0%BE%D0%B3*\n\n\n\n",
											"host": [
												"api",
												"hh",
												"ru"
											],
											"path": [
												"vacancies"
											],
											"query": [
												{
													"key": "text",
													"value": "%D0%BB%D0%BE%D0%B3*\n\n\n\n"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "X4_something_strange_is_given_with_\"менер\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c0c63c5-4f4f-4390-a191-1027bfa4dcb2",
												"exec": [
													"pm.test(\"url is correct and equals 'менер*'\", function () {",
													"    let start = pm.request.url.toString().indexOf('text=');",
													"    pm.expect(pm.request.url.toString().slice(start+5)).to.be.equal(\"%D0%BC%D0%B5%D0%BD%D0%B5%D1%80*\");",
													"});",
													"",
													"pm.test(\"Response has 'менер'\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"менер\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "api.hh.ru/vacancies?text=%D0%BC%D0%B5%D0%BD%D0%B5%D1%80*\n\n\n\n",
											"host": [
												"api",
												"hh",
												"ru"
											],
											"path": [
												"vacancies"
											],
											"query": [
												{
													"key": "text",
													"value": "%D0%BC%D0%B5%D0%BD%D0%B5%D1%80*\n\n\n\n"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "4.uchet_sinonimov",
					"item": [
						{
							"name": "техник механик",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7c0c63c5-4f4f-4390-a191-1027bfa4dcb2",
										"exec": [
											"pm.test(\"url is correct and equals 'механик'\", function () {",
											"    let start = pm.request.url.toString().indexOf('text=');",
											"    pm.expect(pm.request.url.toString().slice(start+5)).to.be.equal(\"%D0%BC%D0%B5%D1%85%D0%B0%D0%BD%D0%B8%D0%BA\");",
											"});",
											"",
											"pm.test(\"Response has 'техник'\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"техник\");",
											"});",
											"",
											"pm.test(\"Response has 'механик'\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"механик\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "api.hh.ru/vacancies?text=%D0%BC%D0%B5%D1%85%D0%B0%D0%BD%D0%B8%D0%BA\n\n\n",
									"host": [
										"api",
										"hh",
										"ru"
									],
									"path": [
										"vacancies"
									],
									"query": [
										{
											"key": "text",
											"value": "%D0%BC%D0%B5%D1%85%D0%B0%D0%BD%D0%B8%D0%BA\n\n\n"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "5.poisk_odnogo_is_slov",
					"item": [
						{
							"name": "1.word_OR_check",
							"item": [
								{
									"name": "X5_\"квантовый_OR_клоун\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c0c63c5-4f4f-4390-a191-1027bfa4dcb2",
												"exec": [
													"pm.test(\"url is correct and equals 'квантовый OR клоун'\", function () {",
													"    pm.expect(pm.request.url.toString().slice(25)).to.be.equal(\"%D0%BA%D0%B2%D0%B0%D0%BD%D1%82%D0%BE%D0%B2%D1%8B%D0%B9%20OR%20%D0%BA%D0%BB%D0%BE%D1%83%D0%BD\");",
													"});",
													"",
													"pm.test(\"Response has 'квант'\", function () {",
													"    pm.expect(pm.response.text().includes('квант')).to.be.true;",
													"});",
													"",
													"pm.test(\"Response has 'Арти'\", function () {",
													"    pm.expect(pm.response.text().includes('Арти')).to.be.true;",
													"});",
													"",
													"pm.test(\"there is string 'Арти' or 'квант' in every item\", function () {",
													"    let numberOfItemsWithoutFirstString = eval(globals.numberOfItemsWhichDoesntHaveBothStrings)('Арти', '', pm.response.json());",
													"    let numberOfItemsWithoutSecondString = eval(globals.numberOfItemsWhichDoesntHaveBothStrings)('квант', '', pm.response.json());",
													"    pm.expect(eval(globals.checkNoMatch)(numberOfItemsWithoutFirstString, numberOfItemsWithoutSecondString)).to.be.equal(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "api.hh.ru/vacancies?text=%D0%BA%D0%B2%D0%B0%D0%BD%D1%82%D0%BE%D0%B2%D1%8B%D0%B9%20OR%20%D0%BA%D0%BB%D0%BE%D1%83%D0%BD\n\n\n\n",
											"host": [
												"api",
												"hh",
												"ru"
											],
											"path": [
												"vacancies"
											],
											"query": [
												{
													"key": "text",
													"value": "%D0%BA%D0%B2%D0%B0%D0%BD%D1%82%D0%BE%D0%B2%D1%8B%D0%B9%20OR%20%D0%BA%D0%BB%D0%BE%D1%83%D0%BD\n\n\n\n"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "2.phrase_OR_check",
							"item": [
								{
									"name": "\"квантовый_инженер\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c0c63c5-4f4f-4390-a191-1027bfa4dcb2",
												"exec": [
													"pm.test(\"url is correct and equals \\\"квантовый инженер\\\"\", function () {",
													"    pm.expect(pm.request.url.toString().slice(25)).to.be.equal(\"%22%D0%BA%D0%B2%D0%B0%D0%BD%D1%82%D0%BE%D0%B2%D1%8B%D0%B9%20%D0%B8%D0%BD%D0%B6%D0%B5%D0%BD%D0%B5%D1%80%22\");",
													"});",
													"",
													"pm.test(\"Response has 'квант'\", function () {",
													"    pm.expect(pm.response.text().includes('квант')).to.be.true;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "api.hh.ru/vacancies?text=%22%D0%BA%D0%B2%D0%B0%D0%BD%D1%82%D0%BE%D0%B2%D1%8B%D0%B9%20%D0%B8%D0%BD%D0%B6%D0%B5%D0%BD%D0%B5%D1%80%22\n\n",
											"host": [
												"api",
												"hh",
												"ru"
											],
											"path": [
												"vacancies"
											],
											"query": [
												{
													"key": "text",
													"value": "%22%D0%BA%D0%B2%D0%B0%D0%BD%D1%82%D0%BE%D0%B2%D1%8B%D0%B9%20%D0%B8%D0%BD%D0%B6%D0%B5%D0%BD%D0%B5%D1%80%22\n\n"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "X6_\"летчик_испытатель\"_OR_\"квантовый_инженер\"",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c0c63c5-4f4f-4390-a191-1027bfa4dcb2",
												"exec": [
													"pm.test(\"url is correct and equals \\\"летчик испытатель\\\" OR \\\"квантовый инженер\\\"\", function () {",
													"    pm.expect(pm.request.url.toString().slice(25)).to.be.equal(\"%22%D0%BB%D0%B5%D1%82%D1%87%D0%B8%D0%BA%20%D0%B8%D1%81%D0%BF%D1%8B%D1%82%D0%B0%D1%82%D0%B5%D0%BB%D1%8C%22%20OR%20%22%D0%BA%D0%B2%D0%B0%D0%BD%D1%82%D0%BE%D0%B2%D1%8B%D0%B9%20%D0%B8%D0%BD%D0%B6%D0%B5%D0%BD%D0%B5%D1%80%22\");",
													"});",
													"",
													"pm.test(\"Response has 'квант'\", function () {",
													"    pm.expect(pm.response.text().includes('квант')).to.be.true;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "api.hh.ru/vacancies?text=%22%D0%BB%D0%B5%D1%82%D1%87%D0%B8%D0%BA%20%D0%B8%D1%81%D0%BF%D1%8B%D1%82%D0%B0%D1%82%D0%B5%D0%BB%D1%8C%22%20OR%20%22%D0%BA%D0%B2%D0%B0%D0%BD%D1%82%D0%BE%D0%B2%D1%8B%D0%B9%20%D0%B8%D0%BD%D0%B6%D0%B5%D0%BD%D0%B5%D1%80%22\n\n",
											"host": [
												"api",
												"hh",
												"ru"
											],
											"path": [
												"vacancies"
											],
											"query": [
												{
													"key": "text",
													"value": "%22%D0%BB%D0%B5%D1%82%D1%87%D0%B8%D0%BA%20%D0%B8%D1%81%D0%BF%D1%8B%D1%82%D0%B0%D1%82%D0%B5%D0%BB%D1%8C%22%20OR%20%22%D0%BA%D0%B2%D0%B0%D0%BD%D1%82%D0%BE%D0%B2%D1%8B%D0%B9%20%D0%B8%D0%BD%D0%B6%D0%B5%D0%BD%D0%B5%D1%80%22\n\n"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "6.poisk_vseh_slov",
					"item": [
						{
							"name": "X7_\"программист java\"_AND_\"python\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7c0c63c5-4f4f-4390-a191-1027bfa4dcb2",
										"exec": [
											"pm.test(\"url is correct and equals '\\\"программист java\\\" AND \\\"python\\\"'\", function () {",
											"    let start = pm.request.url.toString().indexOf('text=');",
											"    pm.expect(pm.request.url.toString().slice(start+5)).to.be.equal('%22%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%81%D1%82%20java%22%20AND%20%22python%22');",
											"});",
											"",
											"pm.test(\"All items have both words 'python' and 'java'\", function () {",
											"    let javaInAllItems = eval(globals.numberOfItemsWhichDoesntHaveBothStrings)('', 'java', pm.response.json());",
											"    let pythonInAllItems = eval(globals.numberOfItemsWhichDoesntHaveBothStrings)('', 'python', pm.response.json());",
											"    pm.expect(pythonInAllItems.length).to.be.equal(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "api.hh.ru/vacancies?text=%22%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%81%D1%82%20java%22%20AND%20%22python%22\n\n\n\n",
									"host": [
										"api",
										"hh",
										"ru"
									],
									"path": [
										"vacancies"
									],
									"query": [
										{
											"key": "text",
											"value": "%22%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%81%D1%82%20java%22%20AND%20%22python%22\n\n\n\n"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "7.iskluchit_slovo",
					"item": [
						{
							"name": "инженер не инженер",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7c0c63c5-4f4f-4390-a191-1027bfa4dcb2",
										"exec": [
											"pm.test(\"url is correct and equals 'инженер and not !инженер'\", function () {",
											"    let start = pm.request.url.toString().indexOf('text=');",
											"    pm.expect(pm.request.url.toString().slice(start+5)).to.be.equal(\"%D0%B8%D0%BD%D0%B6%D0%B5%D0%BD%D0%B5%D1%80%20and%20not%20!%D0%B8%D0%BD%D0%B6%D0%B5%D0%BD%D0%B5%D1%80\");",
											"});",
											"",
											"pm.test(\"Response doesn't have 'инженер'\", function () {",
											"    pm.expect(pm.response.text()).not.to.include(\"инженер\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "api.hh.ru/vacancies?text=%D0%B8%D0%BD%D0%B6%D0%B5%D0%BD%D0%B5%D1%80%20and%20not%20!%D0%B8%D0%BD%D0%B6%D0%B5%D0%BD%D0%B5%D1%80\n\n\n\n",
									"host": [
										"api",
										"hh",
										"ru"
									],
									"path": [
										"vacancies"
									],
									"query": [
										{
											"key": "text",
											"value": "%D0%B8%D0%BD%D0%B6%D0%B5%D0%BD%D0%B5%D1%80%20and%20not%20!%D0%B8%D0%BD%D0%B6%D0%B5%D0%BD%D0%B5%D1%80\n\n\n\n"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "8.obedinenie_neskolkih_uslovii",
					"item": [
						{
							"name": "(летчик AND испытатель) OR маляр",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7c0c63c5-4f4f-4390-a191-1027bfa4dcb2",
										"exec": [
											"pm.test(\"url is correct and equals '(летчик AND испытатель) OR (маляр)'\", function () {",
											"    let start = pm.request.url.toString().indexOf('text=');",
											"    pm.expect(pm.request.url.toString().slice(start+5)).to.be.equal('(%D0%BB%D0%B5%D1%82%D1%87%D0%B8%D0%BA%20AND%20%D0%B8%D1%81%D0%BF%D1%8B%D1%82%D0%B0%D1%82%D0%B5%D0%BB%D1%8C)%20OR%20(%D0%BC%D0%B0%D0%BB%D1%8F%D1%80)');",
											"});",
											"",
											"let letchAndIspitatel = eval(globals.numberOfItemsWhichDoesntHaveBothStrings)('летчик', 'испытат', pm.response.json());",
											"let malyar = eval(globals.numberOfItemsWhichDoesntHaveBothStrings)('маляр', '', pm.response.json());",
											"",
											"",
											"",
											"pm.test(\"checkNoMatch\", function () {",
											"    pm.expect(eval(globals.checkNoMatch)(letchAndIspitatel, malyar)).to.be.equal(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "api.hh.ru/vacancies?text=(%D0%BB%D0%B5%D1%82%D1%87%D0%B8%D0%BA%20AND%20%D0%B8%D1%81%D0%BF%D1%8B%D1%82%D0%B0%D1%82%D0%B5%D0%BB%D1%8C)%20OR%20(%D0%BC%D0%B0%D0%BB%D1%8F%D1%80)\n\n\n",
									"host": [
										"api",
										"hh",
										"ru"
									],
									"path": [
										"vacancies"
									],
									"query": [
										{
											"key": "text",
											"value": "(%D0%BB%D0%B5%D1%82%D1%87%D0%B8%D0%BA%20AND%20%D0%B8%D1%81%D0%BF%D1%8B%D1%82%D0%B0%D1%82%D0%B5%D0%BB%D1%8C)%20OR%20(%D0%BC%D0%B0%D0%BB%D1%8F%D1%80)\n\n\n"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "9.poisk_po_polyam",
					"item": [
						{
							"name": "ID29617741(no_python_from_2.6)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7c0c63c5-4f4f-4390-a191-1027bfa4dcb2",
										"exec": [
											"pm.test(\"url is correct and equals '!ID:29617741'\", function () {",
											"    let start = pm.request.url.toString().indexOf('text=');",
											"    pm.expect(pm.request.url.toString().slice(start+5)).to.be.equal('!ID:29617741');",
											"});",
											"",
											"pm.test(\"there is ID:29617741 in ID field\", function () {",
											"    let stringInProperty = eval(globals.stringInProperty)('29617741', ['name'], pm.response.json());",
											"    pm.expect(stringInProperty.length).to.be.equal(pm.response.json().found);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "api.hh.ru/vacancies?text=!ID:29617741\n\n\n",
									"host": [
										"api",
										"hh",
										"ru"
									],
									"path": [
										"vacancies"
									],
									"query": [
										{
											"key": "text",
											"value": "!ID:29617741\n\n\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "X8_ID29688387(\"квантовый_инженер\")",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7c0c63c5-4f4f-4390-a191-1027bfa4dcb2",
										"exec": [
											"pm.test(\"url is correct and equals 'NAME:(инженер) and !ID:29688387 and DESCRIPTION:квант'\", function () {",
											"    let start = pm.request.url.toString().indexOf('text=');",
											"    pm.expect(pm.request.url.toString().slice(start+5)).to.be.equal('NAME:(%D0%B8%D0%BD%D0%B6%D0%B5%D0%BD%D0%B5%D1%80)%20and%20!ID:29688387%20and%20DESCRIPTION:%D0%BA%D0%B2%D0%B0%D0%BD%D1%82');",
											"});",
											"",
											"pm.test(\"Response has 'инженер'\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"инженер\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "api.hh.ru/vacancies?text=NAME:(%D0%B8%D0%BD%D0%B6%D0%B5%D0%BD%D0%B5%D1%80)%20and%20!ID:29688387%20and%20DESCRIPTION:%D0%BA%D0%B2%D0%B0%D0%BD%D1%82\n",
									"host": [
										"api",
										"hh",
										"ru"
									],
									"path": [
										"vacancies"
									],
									"query": [
										{
											"key": "text",
											"value": "NAME:(%D0%B8%D0%BD%D0%B6%D0%B5%D0%BD%D0%B5%D1%80)%20and%20!ID:29688387%20and%20DESCRIPTION:%D0%BA%D0%B2%D0%B0%D0%BD%D1%82\n"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "X9_ID29688387(\"квантовый_OR_клоун\")",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7c0c63c5-4f4f-4390-a191-1027bfa4dcb2",
										"exec": [
											"pm.test(\"url is correct and equals '!ID:29073822'\", function () {",
											"    let start = pm.request.url.toString().indexOf('text=');",
											"    pm.expect(pm.request.url.toString().slice(start+5)).to.be.equal('!ID:29073822');",
											"});",
											"",
											"pm.test(\"Response has 'квант'\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"квант\");",
											"});",
											"",
											"pm.test(\"Response has 'клоун'\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"клоун\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "api.hh.ru/vacancies?text=!ID:29073822\n\n\n",
									"host": [
										"api",
										"hh",
										"ru"
									],
									"path": [
										"vacancies"
									],
									"query": [
										{
											"key": "text",
											"value": "!ID:29073822\n\n\n"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "3.avtodopolnenie",
			"item": [
				{
					"name": "1.\"avtodopolnenie\"_structure",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c0c63c5-4f4f-4390-a191-1027bfa4dcb2",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Java\");",
									"});",
									"",
									"pm.test(\"JSON is valid\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response time is less than 400ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(400);",
									"});",
									"",
									"pm.test(\"JSON response has only 1 field and it is 'items'\", function () {",
									"    let response = pm.response.json();",
									"    pm.expect(Object.keys(response).length).to.be.equal(1);",
									"    pm.expect(Object.keys(response)[0]).to.be.equal('items');",
									"});",
									"",
									"pm.test(\"JSON response field 'items' only has fields 'text'\", function () {",
									"    let response = pm.response.json().items;",
									"    response.forEach(element => {",
									"        let field = Object.keys(element);",
									"        pm.expect(field.length).to.be.equal(1);",
									"        pm.expect(field[0]).to.be.equal('text');",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "api.hh.ru/suggests/vacancy_search_keyword?text=java",
							"host": [
								"api",
								"hh",
								"ru"
							],
							"path": [
								"suggests",
								"vacancy_search_keyword"
							],
							"query": [
								{
									"key": "text",
									"value": "java"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}